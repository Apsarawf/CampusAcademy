;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-dianhua" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M744.426607 959.264627 744.408187 959.264627l-4.619204-0.103354c-107.472733-5.497201-252.610298-106.652042-388.285351-270.595928l-50.115398-60.531632C165.713182 464.077547 94.631264 303.948547 111.25385 199.680808c11.732206-73.561389 121.098056-135.641283 183.590342-135.641283 30.780027 0 41.930995 15.31787 45.829791 24.464181 35.375695 62.86784 79.147618 172.198897 79.349209 211.411991l0.013303 2.790556-1.000793 2.605338c-7.801686 20.612457-25.25929 30.487362-40.661072 39.197744-20.290115 11.466146-31.82073 18.99461-33.228799 40.670282-0.418532 6.577812 5.254677 36.501332 94.765317 146.84137l38.268582 46.209438c89.75828 105.928564 117.998461 117.331265 124.610042 118.27373 21.644973 3.010567 31.837102-6.479575 47.40466-23.544229 11.850909-12.993942 25.295106-27.740808 47.478338-30.988782l2.808976-0.400113 2.761903 0.586354c39.08825 8.242731 139.142014 72.724325 195.942671 120.596635 8.200776 5.442966 22.512736 21.601994 11.17962 57.299007C892.588041 876.115881 815.084876 959.264627 744.426607 959.264627L744.426607 959.264627z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-liaotian" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 138.552613C283.296093 138.552613 97.263116 289.384631 97.263116 474.803637c0 103.146997 56.382932 198.107725 155.232138 262.369941-22.409913 52.08514-61.704007 95.165384-111.435595 121.873089l-41.954632 22.512241 47.68502 2.967523c10.539822 0.61397 21.284301 1.023284 32.02878 1.023284 46.661737 0 93.630459-6.139702 139.678225-18.316778 50.652543-13.302688 97.621265-33.154392 139.780554-59.04347 17.805136 1.841911 35.917258 2.865194 53.722394 2.865194 228.703907 0 414.736884-150.832018 414.736884-336.251024C926.736884 289.384631 740.703907 138.552613 512 138.552613z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-jianada" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M67.8 255.3h890v595h-890z" fill="#DE2910" ></path>' +
    '' +
    '<path d="M67.8 255.3h890v595h-890z" fill="#DE2910" ></path>' +
    '' +
    '<path d="M290 255.3h445.7v595H290z" fill="#FFFFFF" ></path>' +
    '' +
    '<path d="M512.8 753.4h7.1l-2.3-93.7 6.5-5.6c29.4 3.5 55.7 6.7 85.1 10.2l-7.5-25.6c-1.2-4.5 0.5-9.4 3.9-12.2L691 554l-17.7-8.7c-7.7-2.9-5.6-7.5-2.8-18.5l13-49.5-49.5 11c-4.9 0.8-8.1-2.5-8.8-5.5l-6.4-23.3-39.2 45.9c-5.6 7.4-16.9 7.4-13.4-9.7l16.8-93-22.5 12.2c-6.3 3.7-12.6 4.3-16.2-2.3l-31.5-60.5-31.6 60.5c-3.5 6.6-9.9 6-16.1 2.3l-22.5-12.2 16.8 93c3.5 17-7.8 17-13.4 9.7l-39.2-45.9-6.4 23.3c-0.8 3-3.9 6.3-8.8 5.5L342 477.4l13 49.5c2.8 11 5 15.5-2.8 18.5l-17.7 8.7 85.4 72.5c3.4 2.7 5.1 7.7 3.9 12.2l-7.5 25.6c29.4-3.6 55.7-6.7 85.1-10.2l6.5 5.6-2.3 93.7h7.2z" fill="#E31937" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-meiguo" viewBox="0 0 1542 1024">' +
    '' +
    '<path d="M7.548 761.714h1520.904v-1011.42h-1520.904v1011.42zM1530.968 764.23v0zM1.258 768.004v-1024h1533.484v1024h-1533.484z" fill="#353636" ></path>' +
    '' +
    '<path d="M3.774 450.991h1527.194v77.995h-1527.194z" fill="#FFFFFF" ></path>' +
    '' +
    '<path d="M3.774 372.996h1527.194v77.995h-1527.194z" fill="#C22045" ></path>' +
    '' +
    '<path d="M3.774 608.24h1527.194v77.995h-1527.194z" fill="#FFFFFF" ></path>' +
    '' +
    '<path d="M3.774 686.235h1527.194v77.995h-1527.194zM3.774 530.244h1527.194v77.995h-1527.194z" fill="#C22045" ></path>' +
    '' +
    '<path d="M3.774 295.001h1527.194v77.995h-1527.194z" fill="#FFFFFF" ></path>' +
    '' +
    '<path d="M3.774 59.758h1527.194v77.995h-1527.194z" fill="#C22045" ></path>' +
    '' +
    '<path d="M3.774-175.485h1527.194v77.995h-1527.194z" fill="#FFFFFF" ></path>' +
    '' +
    '<path d="M3.774-97.49h1527.194v77.995h-1527.194zM3.774 215.748h1527.194v77.995h-1527.194zM3.774-253.48h1527.194v77.995h-1527.194z" fill="#C22045" ></path>' +
    '' +
    '<path d="M3.774-18.237h1527.194v77.995h-1527.194zM3.774 137.753h1527.194v77.995h-1527.194z" fill="#FFFFFF" ></path>' +
    '' +
    '<path d="M3.774-253.48h611.381v548.482h-611.381z" fill="#004981" ></path>' +
    '' +
    '<path d="M462.939-224.547l3.774 13.838h13.838l-11.322 7.548 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM462.939-110.070l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-8.806h13.838zM462.939 4.407l3.774 12.58h13.838l-11.322 7.548 5.032 13.838-11.322-8.806-11.322 8.806 5.032-13.838-11.322-7.548h13.838zM462.939 120.141l3.774 13.838h13.838l-11.322 7.548 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM462.939 232.102l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-8.806h13.838zM361.042-224.547l3.774 13.838h13.838l-11.322 7.548 5.032 12.58-11.322-7.548-11.322 7.548 3.774-12.58-10.064-7.548h12.58zM361.042-110.070l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 3.774-12.58-10.064-8.806h12.58zM361.042 4.407l3.774 12.58h13.838l-11.322 7.548 5.032 13.838-11.322-8.806-11.322 8.806 3.774-13.838-10.064-7.548h12.58zM361.042 120.141l3.774 13.838h13.838l-11.322 7.548 5.032 12.58-11.322-7.548-11.322 7.548 3.774-12.58-10.064-7.548h12.58zM361.042 232.102l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 3.774-12.58-10.064-8.806h12.58zM259.145-224.547l3.774 13.838h13.838l-11.322 7.548 3.774 12.58-10.064-7.548-11.322 7.548 3.774-12.58-11.322-7.548h13.838zM259.145-110.070l3.774 12.58h13.838l-11.322 8.806 3.774 12.58-10.064-7.548-11.322 7.548 3.774-12.58-11.322-8.806h13.838zM259.145 4.407l3.774 12.58h13.838l-11.322 7.548 3.774 13.838-10.064-8.806-11.322 8.806 3.774-13.838-11.322-7.548h13.838zM259.145 120.141l3.774 13.838h13.838l-11.322 7.548 3.774 12.58-10.064-7.548-11.322 7.548 3.774-12.58-11.322-7.548h13.838zM259.145 232.102l3.774 12.58h13.838l-11.322 8.806 3.774 12.58-10.064-7.548-11.322 7.548 3.774-12.58-11.322-8.806h13.838zM155.99-224.547l5.032 13.838h12.58l-10.064 7.548 3.774 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM155.99-110.070l5.032 12.58h12.58l-10.064 8.806 3.774 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-8.806h13.838zM155.99 4.407l5.032 12.58h12.58l-10.064 7.548 3.774 13.838-11.322-8.806-11.322 8.806 5.032-13.838-11.322-7.548h13.838zM155.99 120.141l5.032 13.838h12.58l-10.064 7.548 3.774 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM155.99 232.102l5.032 12.58h12.58l-10.064 8.806 3.774 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-8.806h13.838zM54.093-224.547l3.774 13.838h13.838l-11.322 7.548 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM54.093-110.070l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-8.806h13.838zM54.093 4.407l3.774 12.58h13.838l-11.322 7.548 5.032 13.838-11.322-8.806-11.322 8.806 5.032-13.838-11.322-7.548h13.838zM54.093 120.141l3.774 13.838h13.838l-11.322 7.548 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM54.093 232.102l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-8.806h13.838zM515.774-166.679l3.774 12.58h13.838l-11.322 7.548 3.774 13.838-10.064-8.806-11.322 8.806 3.774-13.838-11.322-7.548h13.838zM515.774-49.687l3.774 13.838h13.838l-11.322 7.548 3.774 12.58-10.064-7.548-11.322 7.548 3.774-12.58-11.322-7.548h13.838zM514.516 66.048l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 3.774-12.58-11.322-8.806h13.838zM513.258 180.525l3.774 12.58h13.838l-11.322 7.548 5.032 13.838-11.322-8.806-11.322 8.806 3.774-13.838-10.064-7.548h13.838zM412.619-166.679l5.032 12.58h12.58l-10.064 7.548 3.774 13.838-11.322-8.806-11.322 8.806 5.032-13.838-11.322-7.548h13.838zM412.619-49.687l5.032 13.838h12.58l-10.064 7.548 3.774 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM411.361 66.048l5.032 12.58h13.838l-11.322 8.806 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-8.806h13.838zM411.361 180.525l3.774 12.58h13.838l-11.322 7.548 3.774 13.838-10.064-8.806-11.322 8.806 3.774-13.838-11.322-7.548h13.838zM310.722-171.711l3.774 13.838h13.838l-11.322 7.548 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM310.722-53.461l3.774 12.58h13.838l-11.322 8.806 5.032 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-8.806h13.838zM309.464 62.274l5.032 12.58h12.58l-10.064 7.548 3.774 13.838-11.322-8.806-11.322 8.806 5.032-13.838-11.322-7.548h13.838zM308.206 175.493l5.032 13.838h13.838l-11.322 7.548 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-7.548h13.838zM208.826-171.711l3.774 12.58h13.838l-11.322 7.548 3.774 13.838-10.064-8.806-11.322 8.806 3.774-13.838-11.322-7.548h13.838zM208.826-54.719l3.774 12.58h13.838l-11.322 8.806 3.774 12.58-10.064-7.548-11.322 7.548 3.774-12.58-11.322-8.806h13.838zM207.568 61.016l3.774 12.58h13.838l-11.322 7.548 5.032 13.838-11.322-8.806-11.322 8.806 3.774-13.838-10.064-7.548h13.838zM206.31 174.235l3.774 13.838h13.838l-10.064 7.548 3.774 12.58-11.322-7.548-11.322 7.548 5.032-12.58-11.322-7.548h13.838zM105.671-174.227l5.032 12.58h13.838l-11.322 8.806 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-8.806h13.838zM105.671-57.235l5.032 13.838h13.838l-11.322 7.548 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-7.548h13.838zM105.671 58.5l3.774 12.58h13.838l-11.322 8.806 3.774 12.58-10.064-7.548-11.322 7.548 3.774-12.58-11.322-8.806h13.838zM104.413 172.977l3.774 12.58h13.838l-11.322 7.548 5.032 13.838-11.322-8.806-11.322 8.806 3.774-13.838-10.064-7.548h12.58zM564.835-224.547l5.032 13.838h13.838l-11.322 7.548 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-7.548h13.838zM564.835-110.070l5.032 12.58h13.838l-11.322 8.806 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-8.806h13.838zM564.835 4.407l5.032 12.58h13.838l-11.322 7.548 3.774 13.838-11.322-8.806-10.064 8.806 3.774-13.838-11.322-7.548h13.838zM564.835 120.141l5.032 13.838h13.838l-11.322 7.548 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-7.548h13.838zM564.835 232.102l5.032 12.58h13.838l-11.322 8.806 3.774 12.58-11.322-7.548-10.064 7.548 3.774-12.58-11.322-8.806h13.838z" fill="#FFFFFF" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)